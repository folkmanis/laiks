@use 'sass:map';
@use '@angular/material' as mat;

@mixin color($color-config) {

    $primary-palette: map.get($color-config, 'primary');
    $warn-palette: map.get($color-config, 'warn');

    $text-color: mat.get-color-from-palette(mat.$grey-palette, 'text');

    input[laiksInput] {

        caret-color: mat.get-color-from-palette($primary-palette, 500);

        // color: $text-color;
        // color: rgba(255, 255, 255, 0.87);
        // background-color: mat.get-color-from-palette(mat.$grey-palette, 800);
        // background-color: rgb(66, 66, 66);
        border: none;

        border-bottom: {
            // color: inherit;
            color: mat.get-color-from-palette(mat.$grey-palette, 500);
            width: 2px;
            style: solid;
        }

        &.ng-invalid {
            border-bottom-color: mat.get-color-from-palette($warn-palette, 'text');
        }


        // border-bottom-color: mat.get-color-from-palette(mat.$grey-palette, 800);

        &:focus {
            // outline-color: mat.get-color-from-palette(mat.$grey-palette, 600);
            border-bottom-color: mat.get-color-from-palette($primary-palette, 'lighter');
        }
    }

}

@mixin typography($typography-config) {


    input[laiksInput] {
        font-size: 16px;
        font-weight: 600;
    }

}

@mixin theme($theme) {
    $color-config: mat.get-color-config($theme);

    @if $color-config !=null {
        @include color($color-config);
    }

    $typography-config: mat.get-typography-config($theme);

    @if $typography-config !=null {
        @include typography($typography-config);
    }

}

@mixin appearance() {

    input[laiksInput] {
        color: inherit;
        background-color: inherit;

        &:focus {
            // outline-offset: 0;
            // outline-width: 2px;
            // outline-style: solid;
            // border-radius: 2px 2px 0 0;
            outline: none;
        }
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        display: none;
    }

}